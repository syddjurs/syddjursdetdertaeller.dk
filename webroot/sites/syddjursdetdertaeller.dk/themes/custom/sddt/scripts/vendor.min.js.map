{"version":3,"sources":["svg4everybody.min.js"],"names":["a","b","define","amd","svg4everybody","exports","module","this","c","document","createDocumentFragment","d","getAttribute","setAttribute","e","cloneNode","childNodes","length","appendChild","firstChild","onreadystatechange","readyState","_cachedDocument","implementation","createHTMLDocument","body","innerHTML","responseText","_cachedTarget","_embeds","splice","map","id","getElementById","svg","l","g","h","parentNode","test","nodeName","i","f","validate","removeChild","m","split","n","shift","o","join","p","j","XMLHttpRequest","open","send","push","k","Object","polyfill","navigator","userAgent","match","window","requestAnimationFrame","setTimeout","getElementsByTagName"],"mappings":"CAAA,SAAAA,EAAAC,GAAA,kBAAAC,SAAAA,OAAAC,IAEAD,UAAA,WAAA,MAAAF,GAAAI,cAAAH,MAAA,gBAAAI,SAAAC,OAAAD,QAAAJ,IAAAD,EAAAI,cAAAH,KAAAM,KAAA,WACA,QAAAP,GAAAA,EAAAC,GAEA,GAAAA,EAAA,CAEA,GAAAO,GAAAC,SAAAC,yBAAAC,GAAAX,EAAAY,aAAA,YAAAX,EAAAW,aAAA,UAEAD,IAAAX,EAAAa,aAAA,UAAAF,EAEA,KAEA,GAAAG,GAAAb,EAAAc,WAAA,GAAAD,EAAAE,WAAAC,QAAAT,EAAAU,YAAAJ,EAAAK,WAEAnB,GAAAkB,YAAAV,IAAA,QAAAP,GAAAA,GAEAA,EAAAmB,mBAAA,WAEA,GAAA,IAAAnB,EAAAoB,WAAA,CAEA,GAAAb,GAAAP,EAAAqB,eAEAd,KAAAA,EAAAP,EAAAqB,gBAAAb,SAAAc,eAAAC,mBAAA,IAAAhB,EAAAiB,KAAAC,UAAAzB,EAAA0B,aAAA1B,EAAA2B,kBAEA3B,EAAA4B,QAAAC,OAAA,GAAAC,IAAA,SAAApB,GAEA,GAAAG,GAAAb,EAAA2B,cAAAjB,EAAAqB,GAEAlB,KAAAA,EAAAb,EAAA2B,cAAAjB,EAAAqB,IAAAxB,EAAAyB,eAAAtB,EAAAqB,KAEAhC,EAAAW,EAAAuB,IAAApB,OAEAb,EAAAmB,qBAAA,QAAAZ,GAAAA,GAAA,QAAAG,KAEA,IAEA,GAAAH,GAAA,EAAAA,EAAA2B,EAAAlB,QAAA,CAEA,GAAAmB,GAAAD,EAAA3B,GAAA6B,EAAAD,EAAAE,UAAA,IAAAD,GAAA,OAAAE,KAAAF,EAAAG,UAAA,CAAA,GAAAC,GAAAL,EAAAxB,aAAA,aAAA,IAAAE,KAAA4B,EAAAC,UAAAD,EAAAC,SAAAF,EAAAJ,EAAAD,IAAA,CAEAC,EAAAO,YAAAR,EAEA,IAAAS,GAAAJ,EAAAK,MAAA,KAAAC,EAAAF,EAAAG,QAAAC,EAAAJ,EAAAK,KAAA,IAEA,IAAAH,EAAA9B,OAAA,CAEA,GAAAkC,GAAAC,EAAAL,EAEAI,KAAAA,EAAAC,EAAAL,GAAA,GAAAM,gBAAAF,EAAAG,KAAA,MAAAP,GAAAI,EAAAI,OAAAJ,EAAAtB,YAEAsB,EAAAtB,QAAA2B,MAAAtB,IAAAG,EAAAL,GAAAiB,IAEAhD,EAAAkD,OAEAnD,GAAAqC,EAAA5B,SAAAwB,eAAAgB,WAEAzC,EAEAiD,EAAA9C,EAAA,IAAA,GAAAG,GAAA4B,EAAAgB,OAAAlD,GAAA4B,EAAA,0CAAAC,EAAA,yBAAAI,EAAA,qBAAA3B,GAAA,YAAA4B,GAAAA,EAAAiB,SAAAvB,EAAAG,KAAAqB,UAAAC,aAAAD,UAAAC,UAAAC,MAAArB,QAAA,GAAA,QAAAmB,UAAAC,UAAAC,MAAAzB,QAAA,GAAA,GAEA,IAAAe,MAAAK,EAAAM,OAAAC,uBAAAC,WAAA9B,EAAA1B,SAAAyD,qBAAA,MAEApD,IAAAH,IAAA,MAAAH","file":"vendor.min.js","sourcesContent":["!function(a,b){\"function\"==typeof define&&define.amd?\n// AMD. Register as an anonymous module unless amdModuleId is set\ndefine([],function(){return a.svg4everybody=b()}):\"object\"==typeof exports?module.exports=b():a.svg4everybody=b()}(this,function(){/*! svg4everybody v2.0.3 | github.com/jonathantneal/svg4everybody */\nfunction a(a,b){\n// if the target exists\nif(b){\n// create a document fragment to hold the contents of the target\nvar c=document.createDocumentFragment(),d=!a.getAttribute(\"viewBox\")&&b.getAttribute(\"viewBox\");\n// conditionally set the viewBox on the svg\nd&&a.setAttribute(\"viewBox\",d);\n// copy the contents of the clone into the fragment\nfor(\n// clone the target\nvar e=b.cloneNode(!0);e.childNodes.length;)c.appendChild(e.firstChild);\n// append the fragment into the svg\na.appendChild(c)}}function b(b){\n// listen to changes in the request\nb.onreadystatechange=function(){\n// if the request is ready\nif(4===b.readyState){\n// get the cached html document\nvar c=b._cachedDocument;\n// ensure the cached html document based on the xhr response\nc||(c=b._cachedDocument=document.implementation.createHTMLDocument(\"\"),c.body.innerHTML=b.responseText,b._cachedTarget={}),\n// clear the xhr embeds list and embed each item\nb._embeds.splice(0).map(function(d){\n// get the cached target\nvar e=b._cachedTarget[d.id];\n// ensure the cached target\ne||(e=b._cachedTarget[d.id]=c.getElementById(d.id)),\n// embed the target into the svg\na(d.svg,e)})}},\n// test the ready state change immediately\nb.onreadystatechange()}function c(c){function d(){\n// while the index exists in the live <use> collection\nfor(\n// get the cached <use> index\nvar c=0;c<l.length;){\n// get the current <use>\nvar g=l[c],h=g.parentNode;if(h&&/svg/i.test(h.nodeName)){var i=g.getAttribute(\"xlink:href\");if(e&&(!f.validate||f.validate(i,h,g))){\n// remove the <use> element\nh.removeChild(g);\n// parse the src and get the url and id\nvar m=i.split(\"#\"),n=m.shift(),o=m.join(\"#\");\n// if the link is external\nif(n.length){\n// get the cached xhr request\nvar p=j[n];\n// ensure the xhr request exists\np||(p=j[n]=new XMLHttpRequest,p.open(\"GET\",n),p.send(),p._embeds=[]),\n// add the svg and id as an item to the xhr embeds list\np._embeds.push({svg:h,id:o}),\n// prepare the xhr ready state change event\nb(p)}else\n// embed the local id into the svg\na(h,document.getElementById(o))}}else\n// increase the index when the previous value was not \"valid\"\n++c}\n// continue the interval\nk(d,67)}var e,f=Object(c),g=/\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/,h=/\\bAppleWebKit\\/(\\d+)\\b/,i=/\\bEdge\\/12\\.(\\d+)\\b/;e=\"polyfill\"in f?f.polyfill:g.test(navigator.userAgent)||(navigator.userAgent.match(i)||[])[1]<10547||(navigator.userAgent.match(h)||[])[1]<537;\n// create xhr requests object\nvar j={},k=window.requestAnimationFrame||setTimeout,l=document.getElementsByTagName(\"use\");\n// conditionally start the interval if the polyfill is active\ne&&d()}return c});"],"sourceRoot":"/source/"}